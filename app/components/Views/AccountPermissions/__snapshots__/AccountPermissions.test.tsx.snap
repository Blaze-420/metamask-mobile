// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AccountPermissions renders correctly 1`] = `
<View
  onLayout={[Function]}
  style={
    [
      {
        "bottom": 0,
        "justifyContent": "flex-end",
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      },
      {
        "paddingBottom": 0,
      },
    ]
  }
>
  <View
    style={
      [
        {
          "backgroundColor": "#00000099",
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        {
          "opacity": 0,
        },
      ]
    }
  >
    <TouchableOpacity
      onPress={[Function]}
      style={
        {
          "flex": 1,
        }
      }
    />
  </View>
  <View
    onLayout={[Function]}
    style={
      [
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
        },
        {
          "paddingBottom": 0,
        },
      ]
    }
  >
    <View
      collapsable={false}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onLayout={[Function]}
      style={
        [
          {
            "backgroundColor": "#ffffff",
            "borderColor": "#bbc0c566",
            "borderTopLeftRadius": 8,
            "borderTopRightRadius": 8,
            "borderWidth": 1,
            "maxHeight": 1334,
            "overflow": "hidden",
            "paddingBottom": 0,
            "shadowColor": "#0000001a",
            "shadowOffset": {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 1,
            "shadowRadius": 40,
          },
          {
            "transform": [
              {
                "translateY": 1334,
              },
            ],
          },
        ]
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "alignSelf": "stretch",
            "padding": 4,
          }
        }
      >
        <View
          style={
            {
              "backgroundColor": "#bbc0c566",
              "borderRadius": 2,
              "height": 4,
              "width": 40,
            }
          }
        />
      </View>
      <View
        style={
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "margin": 16,
          }
        }
      >
        <View
          style={
            {
              "backgroundColor": "#ffffff",
              "borderRadius": 16,
              "height": 16,
              "marginRight": 8,
              "overflow": "hidden",
              "width": 16,
            }
          }
        >
          <Image
            onError={[Function]}
            resizeMode="contain"
            source={{}}
            style={
              {
                "flex": 1,
                "height": undefined,
                "width": undefined,
              }
            }
            testID="favicon-avatar-image"
          />
        </View>
        <Text
          accessibilityRole="text"
          style={
            {
              "color": "#141618",
              "fontFamily": "EuclidCircularB-Bold",
              "fontSize": 18,
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 24,
            }
          }
        >
          test
        </Text>
      </View>
      <View
        style={
          {
            "paddingHorizontal": 16,
          }
        }
      >
        <Text
          accessibilityRole="text"
          style={
            {
              "color": "#141618",
              "fontFamily": "EuclidCircularB-Medium",
              "fontSize": 14,
              "fontWeight": "500",
              "letterSpacing": 0,
              "lineHeight": 22,
              "marginVertical": 16,
            }
          }
          testID="accounts-connected-network-picker"
        >
          <View
            style={null}
          >
            <View
              accessibilityLabel="Ethereum Main Network"
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "#ffffff",
                  "borderRadius": 8,
                  "height": 16,
                  "justifyContent": "center",
                  "overflow": "hidden",
                  "width": 16,
                }
              }
              testID="network-avatar-picker"
            >
              <Image
                onError={[Function]}
                resizeMode="contain"
                source={1}
                style={
                  {
                    "height": 16,
                    "width": 16,
                  }
                }
                testID="network-avatar-image"
              />
            </View>
          </View>
          <Text
            accessibilityRole="text"
            numberOfLines={1}
            style={
              {
                "color": "#141618",
                "flexShrink": 1,
                "fontFamily": "EuclidCircularB-Regular",
                "fontSize": 14,
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 22,
                "marginHorizontal": 8,
              }
            }
            testID="open-networks-text"
          >
            Ethereum Main Network
          </Text>
          <SvgMock
            color="#141618"
            height={12}
            name="ArrowDown"
            style={
              {
                "height": 12,
                "width": 12,
              }
            }
            testID="pickernetwork-arrow"
            width={12}
          />
        </TouchableOpacity>
      </View>
      <RCTScrollView
        collapsable={false}
        data={[]}
        getItem={[Function]}
        getItemCount={[Function]}
        initialNumToRender={999}
        keyExtractor={[Function]}
        onContentSizeChange={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        renderScrollComponent={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={[]}
        viewabilityConfigCallbackPairs={[]}
      >
        <View />
      </RCTScrollView>
      <View
        style={
          {
            "marginVertical": 16,
          }
        }
        testID="connect-accounts-buttons"
      >
        <View>
          <TouchableOpacity
            accessibilityRole="button"
            accessible={true}
            activeOpacity={1}
            onPress={[Function]}
            onPressIn={[Function]}
            onPressOut={[Function]}
            style={
              {
                "alignItems": "center",
                "alignSelf": "stretch",
                "backgroundColor": "transparent",
                "borderRadius": 24,
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "opacity": 1,
                "paddingHorizontal": 16,
              }
            }
          >
            <Text
              accessibilityRole="text"
              style={
                {
                  "color": "#0376c9",
                  "fontFamily": "EuclidCircularB-Medium",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 22,
                }
              }
            >
              Connect more accounts
            </Text>
          </TouchableOpacity>
        </View>
      </View>
      <TouchableOpacity
        accessibilityRole="button"
        accessible={true}
        activeOpacity={1}
        onPress={[Function]}
        onPressIn={[Function]}
        onPressOut={[Function]}
        style={
          {
            "alignItems": "center",
            "alignSelf": "stretch",
            "backgroundColor": "transparent",
            "borderColor": "#0376c9",
            "borderRadius": 24,
            "borderWidth": 1,
            "flexDirection": "row",
            "height": 48,
            "justifyContent": "center",
            "marginHorizontal": 16,
            "paddingHorizontal": 16,
          }
        }
        testID="manage_permissions"
      >
        <Text
          accessibilityRole="text"
          style={
            {
              "color": "#0376c9",
              "fontFamily": "EuclidCircularB-Medium",
              "fontSize": 14,
              "fontWeight": "500",
              "letterSpacing": 0,
              "lineHeight": 22,
            }
          }
        >
          Manage Permissions
        </Text>
      </TouchableOpacity>
    </View>
  </View>
</View>
`;
