---
format_version: '11'
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: react-native

pipelines:
  run_e2e_flask_pipeline:
    stages:
      - build_e2e_flask_stage: {}
      - run_e2e_flask_stage: {}
  
  # This is the pipeline you should run manually
  run_release_e2e_flask_pipeline:
    stages:
      - set_flask_env_stage: {}
      - build_e2e_ios_android_stage: {}
      - run_release_e2e_ios_android_stage: {}

stages:
  set_flask_env_stage:
    workflows:
      - set_flask_env: {}
  build_e2e_flask_stage:
    abort_on_fail: true
    workflows:
      - ios_e2e_build_flask: {}
      - android_e2e_build_flask: {}
  run_e2e_flask_stage:
    workflows:
      - ios_e2e_test_flask: {}
      - android_e2e_test_flask: {}
  build_e2e_ios_android_stage:
    workflows:
      - build_android_qa: {}
      - ios_e2e_build: {}
      - android_e2e_build: {}
  run_release_e2e_ios_android_stage:
    workflows:
      - debug_environment_variables: {}
      - run_flask_tests_ios:
          run_if: '{{ getenv "METAMASK_BUILD_TYPE" | eq "flask" }}'
      - run_flask_tests_android:
          run_if: '{{ getenv "METAMASK_BUILD_TYPE" | eq "flask" }}'

workflows:
  # Debug environment variables
  debug_environment_variables:
    steps:
      - script@1:
          title: Debug Environment Variables
          inputs:
            - content: |-
                #!/usr/bin/env bash
                echo "=== DEBUG: Checking Environment Variables ==="
                echo "METAMASK_BUILD_TYPE = ${METAMASK_BUILD_TYPE}"
                echo "All environment variables:"
                env | sort
                echo "=== END DEBUG ==="

  # Set Flask environment variable
  set_flask_env:
    steps:
      - script@1:
          title: Set Flask Environment
          inputs:
            - content: |-
                #!/usr/bin/env bash
                envman add --key METAMASK_BUILD_TYPE --value "flask"
                echo "Set METAMASK_BUILD_TYPE=flask for Flask workflows"

  # Flask test workflows
  run_flask_tests_ios:
    before_run:
      - set_flask_env
    envs:
      - TEST_SUITE_FOLDER: './e2e/specs/flask/*'
    after_run:
      - ios_e2e_test

  run_flask_tests_android:
    meta:
      bitrise.io:
        stack: linux-docker-android-22.04
        machine_type_id: elite-xl
    before_run:
      - set_flask_env
    envs:
      - TEST_SUITE_FOLDER: './e2e/specs/flask/*'
    after_run:
      - android_e2e_test

  # Import the rest of your original workflows here
  # ... (include your remaining workflows)

app:
  envs:
    - METAMASK_BUILD_TYPE: "flask"  # Default for the app
    - MM_NOTIFICATIONS_UI_ENABLED: false
    - MM_NETWORK_UI_REDESIGN_ENABLED: false
    - PORTFOLIO_VIEW: true
    - MM_MULTICHAIN_V1_ENABLED: true
    - MM_CHAIN_PERMISSIONS: true
    - MM_PERMISSIONS_SETTINGS_V1_ENABLED: false
    - MM_SECURITY_ALERTS_API_ENABLED: true
    - MM_STABLECOIN_LENDING_UI_ENABLED: false
    - PROJECT_LOCATION: android
    - NDK_VERSION: 24.0.8215888
    - QA_APK_NAME: app-qa-release
    - MODULE: app
    - VARIANT: ''
    - BITRISE_PROJECT_PATH: ios/MetaMask.xcworkspace
    - BITRISE_SCHEME: MetaMask
    - BITRISE_EXPORT_METHOD: enterprise
    - PROJECT_LOCATION_ANDROID: android
    - PROJECT_LOCATION_IOS: ios
    - VERSION_NAME: 7.41.0
    - VERSION_NUMBER: 1586
    - FLASK_VERSION_NAME: 7.41.0
    - FLASK_VERSION_NUMBER: 1586
    - NVM_VERSION: 0.39.7
    - NVM_SHA256SUM: '8e45fa547f428e9196a5613efad3bfa4d4608b74ca870f930090598f5af5f643'
    - NODE_VERSION: 20.18.0
    - YARN_VERSION: 1.22.22
    - COREPACK_VERSION: 0.28.0

meta:
  bitrise.io:
    stack: osx-xcode-15.0.x
    machine_type_id: g2.mac.large
